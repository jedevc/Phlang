msg "^!help @PhlangManual$"
reply "This is the bot help for @PhlangManual.
For help on the phlang ecosystem in general use '!phlang help'.

:warning: Help coming soon...
"

msg "^!phlang help$"
reply "
!phlang is the base command for all phlang related commands
'!phlang create @NICK CODE' creates a new bot called NICK out of CODE.
'!phlang list' lists all the bots created.
'!phlang help' displays this page.
'!phlang manual' displays help for the phlang language.
"

msg "^!phlang manual$"
reply "
Phlang is made up of triggers and responses. The syntax is as follows:
        TRIGGERS \[TRIGGER_ARGS, ...\]
        RESPONSE \[RESPONSE_ARGS, ...\]

Note that triggers and responses can be in any case and that the number of
arguments differ for the command. You can have as many responses as you
like to a single trigger and as many triggers as your heart desires.

Available triggers are:
MSG regex - Trigger on an incoming message matching the regex.
TIMER delay regex - Trigger after a delay in seconds on an message matching a
regex.
PTIMER - Same as timer, but when triggered again, resets the timer.

Available responses are:
SEND message - Send a root level message.
REPLY message - Send a reply to the message that triggered it.
NICK nick - Set the bot's nick.

Botbot style expressions also work in the responses:
\{a, b, c\} - Choose randomly between the 3 options.
\[a, b, c\] - Send separate messages with the 3 options.
Like Botbot, these expressions can be embedded in each other.

Back references also work similarly to Botbot. \1 is replaced by the first
match \2 is replaced by the second match, and so on.
"
